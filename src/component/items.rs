pub type ItpVal = u64;

const ITP_TYPE_HORSE: ItpVal = 1;
const ITP_TYPE_ONE_HANDED_WPN: ItpVal = 2;
const ITP_TYPE_TWO_HANDED_WPN: ItpVal = 3;
const ITP_TYPE_POLEARM: ItpVal = 4;
const ITP_TYPE_ARROWS: ItpVal = 5;
const ITP_TYPE_BOLTS: ItpVal = 6;
const ITP_TYPE_SHIELD: ItpVal = 7;
const ITP_TYPE_BOW: ItpVal = 8;
const ITP_TYPE_CROSSBOW: ItpVal = 9;
const ITP_TYPE_THROWN: ItpVal = 10;
const ITP_TYPE_GOODS: ItpVal = 11;
const ITP_TYPE_HEAD_ARMOR: ItpVal = 12;
const ITP_TYPE_BODY_ARMOR: ItpVal = 13;
const ITP_TYPE_FOOT_ARMOR: ItpVal = 14;
const ITP_TYPE_HAND_ARMOR: ItpVal = 15;
const ITP_TYPE_PISTOL: ItpVal = 16;
const ITP_TYPE_MUSKET: ItpVal = 17;
const ITP_TYPE_BULLETS: ItpVal = 18;
const ITP_TYPE_ANIMAL: ItpVal = 19;
const ITP_TYPE_BOOK: ItpVal = 20;

const ITP_FORCE_ATTACH_LEFT_HAND: ItpVal = 0x0000000000000100;
const ITP_FORCE_ATTACH_RIGHT_HAND: ItpVal = 0x0000000000000200;
const ITP_FORCE_ATTACH_LEFT_FOREARM: ItpVal = 0x0000000000000300;
const ITP_ATTACH_ARMATURE: ItpVal = 0x0000000000000f00;
const ITP_ATTACHMENT_MASK: ItpVal = 0x0000000000000f00;

const ITP_UNIQUE: ItpVal = 0x0000000000001000;
const ITP_ALWAYS_LOOT: ItpVal = 0x0000000000002000;
const ITP_NO_PARRY: ItpVal = 0x0000000000004000;
const ITP_DEFAULT_AMMO: ItpVal = 0x0000000000008000;
const ITP_MERCHANDISE: ItpVal = 0x0000000000010000;
const ITP_WOODEN_ATTACK: ItpVal = 0x0000000000020000;
const ITP_WOODEN_PARRY: ItpVal = 0x0000000000040000;
const ITP_FOOD: ItpVal = 0x0000000000080000;

const ITP_CANT_RELOAD_ON_HORSEBACK: ItpVal = 0x0000000000100000;
const ITP_TWO_HANDED: ItpVal = 0x0000000000200000;
const ITP_PRIMARY: ItpVal = 0x0000000000400000;
const ITP_SECONDARY: ItpVal = 0x0000000000800000;
const ITP_COVERS_LEGS: ItpVal = 0x0000000001000000;
const ITP_DOESNT_COVER_HAIR: ItpVal = 0x0000000001000000;
const ITP_CAN_PENETRATE_SHIELD: ItpVal = 0x0000000001000000;
const ITP_CONSUMABLE: ItpVal = 0x0000000002000000;
const ITP_BONUS_AGAINST_SHIELD: ItpVal = 0x0000000004000000;
const ITP_PENALTY_WITH_SHIELD: ItpVal = 0x0000000008000000;
const ITP_CANT_USE_ON_HORSEBACK: ItpVal = 0x0000000010000000;
const ITP_CIVILIAN: ItpVal = 0x0000000020000000;
const ITP_NEXT_ITEM_AS_MELEE: ItpVal = 0x0000000020000000;
const ITP_FIT_TO_HEAD: ItpVal = 0x0000000040000000;
const ITP_OFFSET_LANCE: ItpVal = 0x0000000040000000;
const ITP_COVERS_HEAD: ItpVal = 0x0000000080000000;
const ITP_COUCHABLE: ItpVal = 0x0000000080000000;
const ITP_CRUSH_THROUGH: ItpVal = 0x0000000100000000;
const ITP_REMOVE_ITEM_ON_USE: ItpVal = 0x0000000400000000;
const ITP_UNBALANCED: ItpVal = 0x0000000800000000;

const ITP_COVERS_BEARD: ItpVal = 0x0000001000000000;
const ITP_NO_PICK_UP_FROM_GROUND: ItpVal = 0x0000002000000000;
const ITP_CAN_KNOCK_DOWN: ItpVal = 0x0000004000000000;
const ITP_COVERS_HAIR: ItpVal = 0x0000008000000000;

const ITP_FORCE_SHOW_BODY: ItpVal = 0x0000010000000000;
const ITP_FORCE_SHOW_LEFT_HAND: ItpVal = 0x0000020000000000;
const ITP_FORCE_SHOW_RIGHT_HAND: ItpVal = 0x0000040000000000;
const ITP_COVERS_HAIR_PARTIALLY: ItpVal = 0x0000080000000000;

const ITP_EXTRA_PENETRATION: ItpVal = 0x0000100000000000;
const ITP_HAS_BAYONET: ItpVal = 0x0000200000000000;
const ITP_CANT_RELOAD_WHILE_MOVING: ItpVal = 0x0000400000000000;
const ITP_IGNORE_GRAVITY: ItpVal = 0x0000800000000000;
const ITP_IGNORE_FRICTION: ItpVal = 0x0001000000000000;
const ITP_IS_PIKE: ItpVal = 0x0002000000000000;
const ITP_OFFSET_MUSKET: ItpVal = 0x0004000000000000;
const ITP_NO_BLUR: ItpVal = 0x0008000000000000;

const ITP_CANT_RELOAD_WHILE_MOVING_MOUNTED: ItpVal = 0x0010000000000000;
const ITP_HAS_UPPER_STAB: ItpVal = 0x0020000000000000;
const ITP_DISABLE_AGENT_SOUNDS: ItpVal = 0x0040000000000000;

const ITP_KILL_INFO_MASK: ItpVal = 0x0700000000000000;
const ITP_KILL_INFO_BITS: ItpVal = 56;

const ITP_VALUES: [ItpVal; 73] = [
    ITP_TYPE_HORSE,
    ITP_TYPE_ONE_HANDED_WPN,
    ITP_TYPE_TWO_HANDED_WPN,
    ITP_TYPE_POLEARM,
    ITP_TYPE_ARROWS,
    ITP_TYPE_BOLTS,
    ITP_TYPE_SHIELD,
    ITP_TYPE_BOW,
    ITP_TYPE_CROSSBOW,
    ITP_TYPE_THROWN,
    ITP_TYPE_GOODS,
    ITP_TYPE_HEAD_ARMOR,
    ITP_TYPE_BODY_ARMOR,
    ITP_TYPE_HAND_ARMOR,
    ITP_TYPE_PISTOL,
    ITP_TYPE_MUSKET,
    ITP_TYPE_BULLETS,
    ITP_TYPE_ANIMAL,
    ITP_TYPE_BOOK,
    ITP_FORCE_ATTACH_LEFT_HAND,
    ITP_FORCE_ATTACH_RIGHT_HAND,
    ITP_FORCE_ATTACH_LEFT_FOREARM,
    ITP_ATTACH_ARMATURE,
    ITP_ATTACHMENT_MASK,
    ITP_UNIQUE,
    ITP_ALWAYS_LOOT,
    ITP_NO_PARRY,
    ITP_DEFAULT_AMMO,
    ITP_MERCHANDISE,
    ITP_WOODEN_ATTACK,
    ITP_WOODEN_PARRY,
    ITP_FOOD,
    ITP_CANT_RELOAD_ON_HORSEBACK,
    ITP_TWO_HANDED,
    ITP_PRIMARY,
    ITP_SECONDARY,
    ITP_COVERS_LEGS,
    ITP_DOESNT_COVER_HAIR,
    ITP_CAN_PENETRATE_SHIELD,
    ITP_CONSUMABLE,
    ITP_BONUS_AGAINST_SHIELD,
    ITP_PENALTY_WITH_SHIELD,
    ITP_CANT_USE_ON_HORSEBACK,
    ITP_CIVILIAN,
    ITP_NEXT_ITEM_AS_MELEE,
    ITP_FIT_TO_HEAD,
    ITP_OFFSET_LANCE,
    ITP_COVERS_HEAD,
    ITP_COUCHABLE,
    ITP_CRUSH_THROUGH,
    ITP_REMOVE_ITEM_ON_USE,
    ITP_UNBALANCED,
    ITP_COVERS_BEARD,
    ITP_NO_PICK_UP_FROM_GROUND,
    ITP_CAN_KNOCK_DOWN,
    ITP_COVERS_HAIR,
    ITP_FORCE_SHOW_BODY,
    ITP_FORCE_SHOW_LEFT_HAND,
    ITP_FORCE_SHOW_RIGHT_HAND,
    ITP_COVERS_HAIR_PARTIALLY,
    ITP_EXTRA_PENETRATION,
    ITP_HAS_BAYONET,
    ITP_CANT_RELOAD_WHILE_MOVING,
    ITP_IGNORE_GRAVITY,
    ITP_IGNORE_FRICTION,
    ITP_IS_PIKE,
    ITP_OFFSET_MUSKET,
    ITP_NO_BLUR,
    ITP_CANT_RELOAD_WHILE_MOVING_MOUNTED,
    ITP_HAS_UPPER_STAB,
    ITP_DISABLE_AGENT_SOUNDS,
    ITP_KILL_INFO_MASK,
    ITP_KILL_INFO_BITS,
];

pub struct ITP(ItpVal);

impl ITP {
    pub fn from_code(val: ItpVal) -> Result<ITP, ()> {
        if ITP_VALUES.contains(&val) {
            Ok(ITP(val))
        } else {
            Err(())
        }
    }
}

// Equipment slots
pub type EkVal = u32;

const EK_ITEM_0: EkVal = 0;
const EK_ITEM_1: EkVal = 1;
const EK_ITEM_2: EkVal = 2;
const EK_ITEM_3: EkVal = 3;
const EK_HEAD: EkVal = 4;
const EK_BODY: EkVal = 5;
const EK_FOOT: EkVal = 6;
const EK_GLOVES: EkVal = 7;
const EK_HORSE: EkVal = 8;
const EK_FOOD: EkVal = 9;

const EK_VALUES: [EkVal; 10] = [
    EK_ITEM_0, EK_ITEM_1, EK_ITEM_2, EK_ITEM_3, EK_HEAD, EK_BODY, EK_FOOT, EK_GLOVES, EK_HORSE,
    EK_FOOD,
];

pub struct EK(EkVal);

impl EK {
    pub fn from_code(val: EkVal) -> Result<EK, ()> {
        if EK_VALUES.contains(&val) {
            Ok(EK(val))
        } else {
            Err(())
        }
    }
}

const MAX_INVENTORY_ITEMS: u32 = 96;
const NUM_EQUIPMENT_KINDS: u32 = EK_FOOD + 1;
const NUM_WEAPON_PROFICIENCIES: u32 = 7;

// Damage types
const CUT: u32 = 0;
const PIERCE: u32 = 0;
const BLUNT: u32 = 0;

pub type IbfVal = u64;

const IBF_ARMOR_MASK: IbfVal = 0x00000000000000000000000ff;
const IBF_DAMAGE_MASK: IbfVal = 0x00000000000000000000003ff;
const IBF_10BIT_MASK: IbfVal = 0x00000000000000000000003ff;

pub struct IBF(IbfVal);
