use language::operations::{Operation};
pub mod add_troop_to_site;
pub mod add_visitors_to_current_scene;
pub mod all_enemies_defeated;
pub mod cast_ray;
pub mod close_order_menu;
pub mod entry_point_get_position;
pub mod entry_point_is_auto_generated;
pub mod entry_point_set_position;
pub mod finish_mission;
pub mod get_battle_advantage;
pub mod get_scene_boundaries;
pub mod get_startup_ambient_light;
pub mod get_startup_ground_ambient_light;
pub mod get_startup_sun_light;
pub mod is_zoom_disabled;
pub mod jump_to_scene;
pub mod main_hero_fallen;
pub mod mission_cam_animate_to_aperture;
pub mod mission_cam_animate_to_position;
pub mod mission_cam_animate_to_position_and_aperture;
pub mod mission_cam_animate_to_screen_color;
pub mod mission_cam_clear_target_agent;
pub mod mission_cam_get_aperture;
pub mod mission_cam_get_position;
pub mod mission_cam_set_animation;
pub mod mission_cam_set_aperture;
pub mod mission_cam_set_mode;
pub mod mission_cam_set_position;
pub mod mission_cam_set_screen_color;
pub mod mission_cam_set_target_agent;
pub mod mission_disable_talk;
pub mod mission_enable_talk;
pub mod mission_get_time_speed;
pub mod mission_set_duel_mode;
pub mod mission_set_time_speed;
pub mod mission_time_speed_move_to_value;
pub mod mission_tpl_entry_add_override_item;
pub mod mission_tpl_entry_clear_override_items;
pub mod mission_tpl_entry_set_override_flags;
pub mod modify_visitors_at_site;
pub mod mouse_get_world_projection;
pub mod num_active_teams_le;
pub mod rebuild_shadow_map;
pub mod remove_troop_from_site;
pub mod reset_mission_timer_a;
pub mod reset_mission_timer_b;
pub mod reset_mission_timer_c;
pub mod reset_visitors;
pub mod scene_allows_mounted_units;
pub mod scene_get_slot;
pub mod scene_set_day_time;
pub mod scene_set_slot;
pub mod scene_slot_eq;
pub mod scene_slot_ge;
pub mod set_battle_advantage;
pub mod set_fog_distance;
pub mod set_jump_entry;
pub mod set_jump_mission;
pub mod set_mission_result;
pub mod set_postfx;
pub mod set_rain;
pub mod set_river_shader_to_mud;
pub mod set_shader_param_float;
pub mod set_shader_param_float4;
pub mod set_shader_param_float4x4;
pub mod set_shader_param_int;
pub mod set_skybox;
pub mod set_startup_ground_ambient_light;
pub mod set_startup_sun_light;
pub mod set_visitor;
pub mod set_visitors;
pub mod set_zoom_amount;
pub mod store_current_scene;
pub mod store_mission_timer_a;
pub mod store_mission_timer_a_msec;
pub mod store_mission_timer_b;
pub mod store_mission_timer_b_msec;
pub mod store_mission_timer_c;
pub mod store_mission_timer_c_msec;
pub mod store_zoom_amount;

pub fn load_operands() -> Vec<Box<Operation>> {
    let mut result: Vec<Box<Operation>> = vec![];
    result.push(Box::new(add_troop_to_site::AddTroopToSiteOp {}));
    result.push(Box::new(
        add_visitors_to_current_scene::AddVisitorsToCurrentSceneOp {},
    ));
    result.push(Box::new(all_enemies_defeated::AllEnemiesDefeatedOp {}));
    result.push(Box::new(cast_ray::CastRayOp {}));
    result.push(Box::new(close_order_menu::CloseOrderMenuOp {}));
    result.push(Box::new(
        entry_point_get_position::EntryPointGetPositionOp {},
    ));
    result.push(Box::new(
        entry_point_is_auto_generated::EntryPointIsAutoGeneratedOp {},
    ));
    result.push(Box::new(
        entry_point_set_position::EntryPointSetPositionOp {},
    ));
    result.push(Box::new(finish_mission::FinishMissionOp {}));
    result.push(Box::new(get_battle_advantage::GetBattleAdvantageOp {}));
    result.push(Box::new(get_scene_boundaries::GetSceneBoundariesOp {}));
    result.push(Box::new(
        get_startup_ambient_light::GetStartupAmbientLightOp {},
    ));
    result.push(Box::new(
        get_startup_ground_ambient_light::GetStartupGroundAmbientLightOp {},
    ));
    result.push(Box::new(get_startup_sun_light::GetStartupSunLightOp {}));
    result.push(Box::new(is_zoom_disabled::IsZoomDisabledOp {}));
    result.push(Box::new(jump_to_scene::JumpToSceneOp {}));
    result.push(Box::new(main_hero_fallen::MainHeroFallenOp {}));
    result.push(Box::new(
        mission_cam_animate_to_aperture::MissionCamAnimateToApertureOp {},
    ));
    result.push(Box::new(
        mission_cam_animate_to_position::MissionCamAnimateToPositionOp {},
    ));
    result.push(Box::new(
        mission_cam_animate_to_position_and_aperture::MissionCamAnimateToPositionAndApertureOp {},
    ));
    result.push(Box::new(
        mission_cam_animate_to_screen_color::MissionCamAnimateToScreenColorOp {},
    ));
    result.push(Box::new(
        mission_cam_clear_target_agent::MissionCamClearTargetAgentOp {},
    ));
    result.push(Box::new(
        mission_cam_get_aperture::MissionCamGetApertureOp {},
    ));
    result.push(Box::new(
        mission_cam_get_position::MissionCamGetPositionOp {},
    ));
    result.push(Box::new(
        mission_cam_set_animation::MissionCamSetAnimationOp {},
    ));
    result.push(Box::new(
        mission_cam_set_aperture::MissionCamSetApertureOp {},
    ));
    result.push(Box::new(mission_cam_set_mode::MissionCamSetModeOp {}));
    result.push(Box::new(
        mission_cam_set_position::MissionCamSetPositionOp {},
    ));
    result.push(Box::new(
        mission_cam_set_screen_color::MissionCamSetScreenColorOp {},
    ));
    result.push(Box::new(
        mission_cam_set_target_agent::MissionCamSetTargetAgentOp {},
    ));
    result.push(Box::new(mission_disable_talk::MissionDisableTalkOp {}));
    result.push(Box::new(mission_enable_talk::MissionEnableTalkOp {}));
    result.push(Box::new(mission_get_time_speed::MissionGetTimeSpeedOp {}));
    result.push(Box::new(mission_set_duel_mode::MissionSetDuelModeOp {}));
    result.push(Box::new(mission_set_time_speed::MissionSetTimeSpeedOp {}));
    result.push(Box::new(
        mission_time_speed_move_to_value::MissionTimeSpeedMoveToValueOp {},
    ));
    result.push(Box::new(
        mission_tpl_entry_add_override_item::MissionTplEntryAddOverrideItemOp {},
    ));
    result.push(Box::new(
        mission_tpl_entry_clear_override_items::MissionTplEntryClearOverrideItemsOp {},
    ));
    result.push(Box::new(
        mission_tpl_entry_set_override_flags::MissionTplEntrySetOverrideFlagsOp {},
    ));
    result.push(Box::new(modify_visitors_at_site::ModifyVisitorsAtSiteOp {}));
    result.push(Box::new(
        mouse_get_world_projection::MouseGetWorldProjectionOp {},
    ));
    result.push(Box::new(num_active_teams_le::NumActiveTeamsLeOp {}));
    result.push(Box::new(rebuild_shadow_map::RebuildShadowMapOp {}));
    result.push(Box::new(remove_troop_from_site::RemoveTroopFromSiteOp {}));
    result.push(Box::new(reset_mission_timer_a::ResetMissionTimerAOp {}));
    result.push(Box::new(reset_mission_timer_b::ResetMissionTimerBOp {}));
    result.push(Box::new(reset_mission_timer_c::ResetMissionTimerCOp {}));
    result.push(Box::new(reset_visitors::ResetVisitorsOp {}));
    result.push(Box::new(
        scene_allows_mounted_units::SceneAllowsMountedUnitsOp {},
    ));
    result.push(Box::new(scene_get_slot::SceneGetSlotOp {}));
    result.push(Box::new(scene_set_day_time::SceneSetDayTimeOp {}));
    result.push(Box::new(scene_set_slot::SceneSetSlotOp {}));
    result.push(Box::new(scene_slot_eq::SceneSlotEqOp {}));
    result.push(Box::new(scene_slot_ge::SceneSlotGeOp {}));
    result.push(Box::new(set_battle_advantage::SetBattleAdvantageOp {}));
    result.push(Box::new(set_fog_distance::SetFogDistanceOp {}));
    result.push(Box::new(set_jump_entry::SetJumpEntryOp {}));
    result.push(Box::new(set_jump_mission::SetJumpMissionOp {}));
    result.push(Box::new(set_mission_result::SetMissionResultOp {}));
    result.push(Box::new(set_postfx::SetPostfxOp {}));
    result.push(Box::new(set_rain::SetRainOp {}));
    result.push(Box::new(set_river_shader_to_mud::SetRiverShaderToMudOp {}));
    result.push(Box::new(set_shader_param_float::SetShaderParamFloatOp {}));
    result.push(Box::new(set_shader_param_float4::SetShaderParamFloat4Op {}));
    result.push(Box::new(
        set_shader_param_float4x4::SetShaderParamFloat4x4Op {},
    ));
    result.push(Box::new(set_shader_param_int::SetShaderParamIntOp {}));
    result.push(Box::new(set_skybox::SetSkyboxOp {}));
    result.push(Box::new(
        set_startup_ground_ambient_light::SetStartupGroundAmbientLightOp {},
    ));
    result.push(Box::new(set_startup_sun_light::SetStartupSunLightOp {}));
    result.push(Box::new(set_visitor::SetVisitorOp {}));
    result.push(Box::new(set_visitors::SetVisitorsOp {}));
    result.push(Box::new(set_zoom_amount::SetZoomAmountOp {}));
    result.push(Box::new(store_current_scene::StoreCurrentSceneOp {}));
    result.push(Box::new(store_mission_timer_a::StoreMissionTimerAOp {}));
    result.push(Box::new(
        store_mission_timer_a_msec::StoreMissionTimerAMsecOp {},
    ));
    result.push(Box::new(store_mission_timer_b::StoreMissionTimerBOp {}));
    result.push(Box::new(
        store_mission_timer_b_msec::StoreMissionTimerBMsecOp {},
    ));
    result.push(Box::new(store_mission_timer_c::StoreMissionTimerCOp {}));
    result.push(Box::new(
        store_mission_timer_c_msec::StoreMissionTimerCMsecOp {},
    ));
    result.push(Box::new(store_zoom_amount::StoreZoomAmountOp {}));
    result
}
